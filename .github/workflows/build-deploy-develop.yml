name: Build & Deploy Develop
run-name: Building and Deploying Bonfire website on Develop  ðŸš€
on: workflow_dispatch

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: development    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: use node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          echo "@gsap:registry=https://npm.greensock.com" >> ~/.npmrc
          echo "//npm.greensock.com/:_authToken=${{ secrets.GSAP_NPM_TOKEN }}aaaa" >> ~/.npmrc
          cd source/frontend
          #curl -o ./out/business-3.12.5.tgz https://npm.greensock.com/@gsap/business/-/business-3.12.5.tgz

          #npm install @gsap/business
          #npm install
          
      - name: Build Next.js application
        run: | 
          export DATOCMS_READONLY_API_TOKEN=${{ secrets.DATOCMS_READONLY_API_TOKEN }}
          export LEVER_TOKEN=${{ secrets.LEVER_TOKEN }}
          export RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED=${{ vars.RECOIL_DUPLICATE_ATOM_KEY_CHECKING_ENABLED }}
          export LEVER_ENDPOINT=${{ vars.LEVER_ENDPOINT }}
          cd ./source/frontend/
          mkdir out
          curl -o ./source/frontend/out/business-3.12.5.tgz https://npm.greensock.com/@gsap/business/-/business-3.12.5.tgz


          #npm --prefix source/frontend run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ./source/frontend/out/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: development
    steps:
      - name: Auth with Service Account
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: ./source/frontend/out/

      - name: Upload to Google Cloud Storage
        run: |
          gcloud storage rm -R 'gs://${{ vars.BUCKET_NAME }}/**'
          gcloud storage cp -R './source/frontend/out/**' 'gs://${{ vars.BUCKET_NAME }}/'
